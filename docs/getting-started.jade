include ../_includes/utils

+section_title('Playing with Angular Google Maps (AGM)', 'playing')
:marked
  If you just want to play with AGM and don't want to set up a full project with NPM, you can use the following Plunker. It has all the dependencies to play with Angular, Typescript and of course `angular-google-maps`:

a.button.button-icon.blue-light(href='http://plnkr.co/edit/YX7W20?p=preview') &raquo; Play with angular-google-maps on Plunker

+section_title('Setting up a basic project structure', 'project-structure')

.note.blue
  h4.note-title Note
  p.note-description
    :marked
        **If you're familiar with setting up Angular projects with Angular CLI & TypeScript, you can skip this part and move on to this part:**

        **[Setting up Angular Google Maps (AGM)](#angular-google-maps-setup)**

:marked
  ### Installing TypeScript
  `AGM` works best with [TypeScript](http://www.typescriptlang.org/) version 2+.
  If you have an older version of TypeScript or haven't installed TypeScript yet, please run the following command:

.code-highlight
  pre
    code.language-markup npm install -g typescript@2.1

:marked
  ### Create an Angular CLI project

  We start by creating a project with [Angular CLI](https://cli.angular.io/). Angular CLI makes it easy to create an application that already works and allows you to follow the best practices. I you haven't installed Angular CLI yet, please run the following command first:

.code-highlight
  :marked
    ```markup
    npm install -g @angular/cli
    ```

:marked
  Run the following commands to create a new Angular project with Angular CLI:

.code-highlight
  :marked
    ```markup
    ng new my-maps-project
    cd my-maps-project
    ```  

+section_title('Setting up angular-google-maps', 'angular-google-maps-setup')

:marked
  ### Install angular-google-maps

  `Angular Google Maps (short name: AGM)` gets shipped via the Node Package Manager (NPM). Run the following command to add it to your new project:

.code-highlight
  :marked
    ```markup
    npm install @agm/core --save
    ```
    
:marked
  ### Setup @NgModule
  Open `src/app/app.module.ts` and import the `AgmCoreModule`.  
  **You neeed to provide a Google Maps API key to be able to see a Map. Get an API key [here](https://developers.google.com/maps/documentation/javascript/get-api-key?hl=en#key).**

.code-highlight
  :marked
    ```typescript
    import { BrowserModule } from '@angular/platform-browser';
    import { NgModule, ApplicationRef } from '@angular/core';
    import { CommonModule } from '@angular/common';
    import { FormsModule } from '@angular/forms';
    import { AppComponent } from './app.component';

    import { AgmCoreModule } from '@agm/core';

    @NgModule({
      imports: [
        BrowserModule,
        CommonModule,
        FormsModule,
        AgmCoreModule.forRoot({
          apiKey: 'YOUR_KEY'
        })
      ],
      providers: [],
      declarations: [ AppComponent ],
      bootstrap: [ AppComponent ]
    })
    export class AppModule {}
    ```

:marked
  ### Extending the app component
  Angular CLI already created an app component the we'll now use to create our first google map.  
  Open the file `src/app/app.component.ts` and modify it like below:

.code-highlight
  :marked
    ```typescript
    import { Component } from '@angular/core';

    @Component({
      selector: 'app-root',
      templateUrl: 'app.component.html',
      styleUrls: ['app.component.css'],
    })
    export class AppComponent {
      title: string = 'My first AGM project';
      lat: number = 51.678418;
      lng: number = 7.809007;
    }
    ```

:marked
  ### Setup the template
  Open the file `src/app/app.component.html` and paste the following content:

.code-highlight
  :marked
    ```markup
    <h1>{{ title }}</h1>

    <!-- this creates a google map on the page with the given lat/lng from -->
    <!-- the component as the initial center of the map: -->

    <agm-map [latitude]="lat" [longitude]="lng">
      <agm-map-marker [latitude]="lat" [longitude]="lng"></agm-map-marker>
    </agm-map>

    ```

:marked
  ### Setup the CSS file
  Open the file `src/app/app.component.css` and paste the following content:

.code-highlight
  :marked
    ```css
    agm-map {
      height: 300px;
    }
    ```

.note.red
  h4.note-title CSS styling is required!
  p.note-description
    :marked
        It is really important that you define a height component `agm-map`. Otherwise, you won't see a map on the page!

+section_title('Build and run your application', 'build-and-run')

:marked
  Great! So we have created all the needed source files, so everything should be ready to build an run the application.

  Run the following command in the **project root folder**:

.code-highlight
  :marked
    ```markup
    ng serve
    ```
:marked
  Then, open the following URL in your browser: <a href="http://localhost:4200/" target="_blank">http://localhost:4200/</a>

  The command starts the following things:
  * Starts the TypeScript compiler and compiles all sources files (watches also for file changes in the source files and recompiles all files if something has changed)
  * Starts a local web server to serve the Angular application. It refreshes the page when served files change.

  **When everything works as expected, you should see your first Google Map created with AGM ðŸŽ‰ðŸŽ‰ðŸŽ‰!**

+section_title('Questions?', 'questions')
:marked
  When you have problems setting up **angular-google-maps (AGM)** or questions in general, the best way is to join the chat where you find nice people from the community that can answer you questions:

a.button.button-icon.blue-light(href='https://gitter.im/SebastianM/angular-google-maps') &raquo; Chat on Gitter
